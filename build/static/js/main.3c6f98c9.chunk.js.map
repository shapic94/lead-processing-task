{"version":3,"sources":["Pages/Login/Login.js","Components/Email/Email.js","Components/UserStatus/UserStatus.js","Redux/Actions.js","Components/Navigation/Navigation.js","Components/Loading/Loading.js","Components/Idle/Idle.js","Components/EmailActions/EmailActions.js","Pages/User/UserDashboard/UserDashboard.js","Pages/Admin/AdminDashboard/AdminDashboard.js","Containers/App/App.js","reportWebVitals.js","Redux/Reducers.js","Redux/Store.js","index.js"],"names":["LoginPage","className","to","EmailComponent","this","props","email","body","Component","connect","state","global","UserStatusComponent","user","status","setUser","type","payload","setEmail","NavigationComponent","onClick","onClickStatus","dispatch","LoadingComponent","loading","color","size","IdleComponent","EmailActionsComponent","emailStatus","onClickAction","UserDashboardPage","client","W3CWebSocket","console","log","onopen","onmessage","message","data","JSON","parse","onclose","prevProps","prevState","snapshot","readyState","OPEN","send","stringify","AdminDashboardPage","emails","fetch","then","res","json","result","setState","catch","error","event","map","e","timestamp","target","value","method","isLoaded","items","date","subject","data-tip","slice","onChange","onChangeEmail","assigned","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3c6f98c9.chunk.js","sourcesContent":["import React from 'react'\nimport {Link} from \"react-router-dom\";\n\nimport './Login.scss'\n\nconst LoginPage = () => (\n\t<div className=\"login\">\n\t\t<div>\n\t\t\t<Link to=\"/admin-dashboard\">\n\t\t\t\t<button>Login as admin</button>\n\t\t\t</Link>\n\t\t</div>\n\t\t<div>\n\t\t\t<Link to=\"/user-dashboard\">\n\t\t\t\t<button>Login as user</button>\n\t\t\t</Link>\n\t\t</div>\n\t</div>\n)\n\nexport default LoginPage","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\n\nimport './Email.scss';\n\n\nclass EmailComponent extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"email\">\n\t\t\t\t<div className=\"col-md-12\">\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<p>{this.props.email.body}</p>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = state => {\n\treturn {\n\t\temail: state.global.email\n\t}\n}\n\nexport default connect(mapStateToProps)(EmailComponent)","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\n\nimport './UserStatus.scss';\n\nclass UserStatusComponent extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"userStatus\">\n\t\t\t\t{this.props.user && (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<span className={this.props.user.status}></span><span>{this.props.user.status}</span>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = state => {\n\treturn {\n\t\tuser: state.global.user,\n\t}\n}\n\nexport default connect(mapStateToProps)(UserStatusComponent)","function setUser(user) {\n\treturn {\n\t\ttype: \"SET_USER\",\n\t\tpayload: user\n\t}\n}\n\nfunction setEmail(email) {\n\treturn {\n\t\ttype: \"SET_EMAIL\",\n\t\tpayload: email\n\t}\n}\n\nexport {setUser, setEmail}","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport UserStatus from \"../UserStatus/UserStatus\";\nimport {Link} from \"react-router-dom\";\nimport {setEmail, setUser} from \"../../Redux/Actions\";\n\nimport './Navigation.scss';\n\nclass NavigationComponent extends Component {\n\tonClickStatus(status) {\n\t\tthis.props.setUser({...this.props.user, status})\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"navigation\">\n\t\t\t\t<nav>\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t<li>Home</li>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\tStatus\n\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t<li onClick={() => this.onClickStatus('online')}>Online</li>\n\t\t\t\t\t\t\t\t<li onClick={() => this.onClickStatus('away')}>Away</li>\n\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t</ul>\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t<li><UserStatus/></li>\n\t\t\t\t\t\t<li><Link to=\"/\">Logout</Link></li>\n\t\t\t\t\t</ul>\n\t\t\t\t</nav>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst mapDispatchToProps = dispatch => {\n\treturn {\n\t\tsetUser: status => dispatch(setUser(status)),\n\t\tsetEmail: email => dispatch(setEmail(email)),\n\t}\n}\n\nexport default connect(null, mapDispatchToProps)(NavigationComponent)","import React, {Component} from 'react';\nimport GridLoader from \"react-spinners/GridLoader\";\n\nimport './Loading.scss';\n\nclass LoadingComponent extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tloading: true,\n\t\t\tcolor: '#36d7b7'\n\t\t};\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"loading\">\n\t\t\t\t<GridLoader color={this.state.color} loading={this.state.loading} size={20}/>\n\t\t\t\t<span className=\"loading-text\">Waiting for new email</span>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default LoadingComponent","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport HashLoader from \"react-spinners/HashLoader\";\n\nimport './Idle.scss';\n\nclass IdleComponent extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tloading: true,\n\t\t\tcolor: '#36d7b7'\n\t\t};\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"idle\">\n\t\t\t\t<HashLoader color={this.state.color} loading={this.state.loading} size={50}/>\n\t\t\t\t<span className=\"idle-text\">You are currently {this.props.user.status}.</span>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = state => {\n\treturn {\n\t\tuser: state.global.user,\n\t}\n}\n\n\nexport default connect(mapStateToProps)(IdleComponent)","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\n\nimport './EmailActions.scss';\nimport {setEmail} from \"../../Redux/Actions\";\n\nclass EmailActionsComponent extends Component {\n\tonClickAction(emailStatus) {\n\t\tthis.props.setEmail({...this.props.email, status: emailStatus});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"email-actions\">\n\t\t\t\t<button type=\"button\" onClick={() => this.onClickAction('Positive reply')}>Positive reply\n\t\t\t\t</button>\n\t\t\t\t<button type=\"button\" onClick={() => this.onClickAction('Neutral reply')}>Neutral reply\n\t\t\t\t</button>\n\t\t\t\t<button type=\"button\" onClick={() => this.onClickAction('Not a lead')}>Not\n\t\t\t\t\ta lead\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = state => {\n\treturn {\n\t\temail: state.global.email\n\t}\n}\n\n\nconst mapDispatchToProps = dispatch => {\n\treturn {\n\t\tsetEmail: email => dispatch(setEmail(email)),\n\t}\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EmailActionsComponent)","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {w3cwebsocket as W3CWebSocket} from \"websocket\";\nimport EmailComponent from \"../../../Components/Email/Email\";\nimport NavigationComponent from \"../../../Components/Navigation/Navigation\";\n\nimport './UserDashboard.scss';\nimport LoadingComponent from \"../../../Components/Loading/Loading\";\nimport {setEmail, setUser} from \"../../../Redux/Actions\";\nimport IdleComponent from \"../../../Components/Idle/Idle\";\nimport EmailActionsComponent from \"../../../Components/EmailActions/EmailActions\";\n\nclass UserDashboardPage extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tclient: new W3CWebSocket('wss://8wyzugxnaf.execute-api.us-east-2.amazonaws.com/production')\n\t\t}\n\t}\n\tcomponentWillMount() {\n\t\tconsole.log('uslo')\n\t\tthis.state.client.onopen = () => {\n\t\t\tconsole.log('online')\n\t\t\tthis.props.setUser({...this.props.user, status: 'online'})\n\t\t};\n\n\t\tthis.state.client.onmessage = (message) => {\n\t\t\tlet data = JSON.parse(message.data);\n\n\n\n\t\t\tif ('status' in data) {\n\t\t\t\tthis.props.setUser({...this.props.user, status: data.status})\n\t\t\t} else if ('email' in data) {\n\t\t\t\tthis.props.setEmail(data.email)\n\t\t\t}\n\t\t};\n\n\t\tthis.state.client.onclose = () => {\n\t\t\tconsole.log('offline')\n\t\t\tthis.props.setUser({...this.props.user, status: 'offline'})\n\t\t};\n\t}\n\n\tcomponentDidUpdate(prevProps, prevState, snapshot) {\n\t\tif (prevProps.user && this.props.user && prevProps.user.status !== this.props.user.status) {\n\t\t\tif (this.state.client.readyState === this.state.client.OPEN) {\n\t\t\t\tthis.state.client.send(JSON.stringify({type: 'USER_STATUS', user: this.props.user, email: this.props.email}));\n\n\t\t\t\tif (this.props.user.status === 'away') {\n\t\t\t\t\tthis.props.setEmail(null);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (prevProps.email && this.props.email && prevProps.email.status !== this.props.email.status) {\n\t\t\tif (this.state.client.readyState === this.state.client.OPEN) {\n\t\t\t\tthis.state.client.send(JSON.stringify({type: 'EMAIL_STATUS', email: this.props.email}));\n\t\t\t\tthis.props.setEmail(null)\n\t\t\t}\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"userDashboard\">\n\t\t\t\t<NavigationComponent/>\n\t\t\t\t<div className=\"emailWrapper\">\n\t\t\t\t\t{this.props.user && this.props.user.status === 'online' && (\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t{!this.props.email && (\n\t\t\t\t\t\t\t\t<LoadingComponent/>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t{this.props.email && (\n\t\t\t\t\t\t\t\t<EmailComponent/>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t\t{this.props.user && this.props.user.status === 'away' && (\n\t\t\t\t\t\t<IdleComponent/>\n\t\t\t\t\t)}\n\t\t\t\t\t{this.props.user && this.props.user.status === 'offline' && (\n\t\t\t\t\t\t<IdleComponent/>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"actionWrapper\">\n\t\t\t\t\t{this.props.user && this.props.email && (\n\t\t\t\t\t\t<EmailActionsComponent/>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = state => {\n\treturn {\n\t\tuser: state.global.user,\n\t\temail: state.global.email,\n\t}\n}\n\nconst mapDispatchToProps = dispatch => {\n\treturn {\n\t\tsetUser: status => dispatch(setUser(status)),\n\t\tsetEmail: email => dispatch(setEmail(email)),\n\t}\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserDashboardPage)","import React, {Component} from 'react';\nimport ReactTooltip from 'react-tooltip';\n\nimport './AdminDashboard.scss';\n\nclass AdminDashboardPage extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\temails: []\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tfetch(\"https://1zkqwvw10d.execute-api.us-east-2.amazonaws.com/v2/lpt\")\n\t\t\t.then(res => res.json())\n\t\t\t.then((result) => {\n\t\t\t\tconsole.log(result)\n\t\t\t\tthis.setState({\n\t\t\t\t\temails: result\n\t\t\t\t});\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tconsole.log(error)\n\t\t\t});\n\t}\n\n\tonChangeEmail(event, email) {\n\t\tconst emails = this.state.emails.map(e => {\n\t\t\tif (e.timestamp === email.timestamp) {\n\t\t\t\temail.status = event.target.value;\n\t\t\t}\n\n\t\t\treturn e;\n\t\t})\n\n\n\t\tthis.setState({emails: emails});\n\t}\n\n\tonClickAction(email) {\n\t\tfetch(\"https://1zkqwvw10d.execute-api.us-east-2.amazonaws.com/v2/lpt\", {\n\t\t\tmethod: 'PUT',\n\t\t\tbody: JSON.stringify(email)\n\t\t})\n\t\t\t.then(res => res.json())\n\t\t\t.then((result) => {\n\t\t\t\tthis.setState({\n\t\t\t\t\tisLoaded: true,\n\t\t\t\t\titems: result.items\n\t\t\t\t});\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t});\n\n\t}\n\n\trender() {\n\t\tconst {emails} = this.state;\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t{emails && (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<th>Date</th>\n\t\t\t\t\t\t\t\t<th>Subject</th>\n\t\t\t\t\t\t\t\t<th>Body</th>\n\t\t\t\t\t\t\t\t<th>Status</th>\n\t\t\t\t\t\t\t\t<th>Assigned</th>\n\t\t\t\t\t\t\t\t<th></th>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t{emails.map(email => (\n\t\t\t\t\t\t\t\t<tr key={email.timestamp}>\n\t\t\t\t\t\t\t\t\t<td>{email.date}</td>\n\t\t\t\t\t\t\t\t\t<td>{email.subject}</td>\n\t\t\t\t\t\t\t\t\t<td data-tip={email.body}>{email.body.slice(0, 20)}...</td>\n\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t<select value={email.status} onChange={(e) => this.onChangeEmail(e, email)}>\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"\"></option>\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"Positive reply\">Positive reply</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"Neutral reply\">Neutral reply</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"Not a lead\">Not a lead</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"Pending\">Pending</option>\n\t\t\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t<td>{email.assigned}</td>\n\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t<button type=\"button\" onClick={() => this.onClickAction(email)}>Change</button>\n\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t</table>\n\t\t\t\t\t\t<ReactTooltip/>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default AdminDashboardPage","import './App.css';\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\nimport LoginPage from \"../../Pages/Login/Login\";\nimport UserDashboardPage from \"../../Pages/User/UserDashboard/UserDashboard\";\nimport AdminDashboardPage from \"../../Pages/Admin/AdminDashboard/AdminDashboard\";\n\nfunction App() {\n\treturn (\n\t\t<Router>\n\t\t\t<div className=\"app\">\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route path=\"/admin-dashboard\">\n\t\t\t\t\t\t<AdminDashboardPage/>\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route path=\"/user-dashboard\">\n\t\t\t\t\t\t<UserDashboardPage/>\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route path=\"/\">\n\t\t\t\t\t\t<LoginPage/>\n\t\t\t\t\t</Route>\n\t\t\t\t</Switch>\n\t\t\t</div>\n\t\t</Router>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {combineReducers} from 'redux'\n\nconst reducer = (state = {}, action) => {\n\tswitch (action.type) {\n\t\tcase \"SET_USER\":\n\t\t\treturn {...state, user: action.payload}\n\t\tcase \"SET_EMAIL\":\n\t\t\treturn {...state, email: action.payload}\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n\nconst rootReducer = combineReducers({\n\tglobal: reducer\n});\n\nexport default rootReducer;","import {createStore} from 'redux'\nimport rootReducer from './Reducers'\n\nconst store = createStore(\n\trootReducer,\n\twindow.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Containers/App/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {Provider} from 'react-redux';\nimport store from './Redux/Store'\n\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Provider store={store}>\n\t\t\t<App/>\n\t\t</Provider>\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}